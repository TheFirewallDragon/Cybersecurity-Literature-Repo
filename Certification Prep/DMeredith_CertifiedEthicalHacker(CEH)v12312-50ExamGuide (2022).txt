Develop foundational skills in ethical hacking and penetration testing while getting ready to pass the certification exam

Key Features
Learn how to look at technology from the standpoint of an attacker
Understand the methods that attackers use to infiltrate networks
Prepare to take and pass the exam in one attempt with the help of hands-on examples and mock tests
Book Description
With cyber threats continually evolving, understanding the trends and using the tools deployed by attackers to determine vulnerabilities in your system can help secure your applications, networks, and devices. To outmatch attacks, developing an attacker's mindset is a necessary skill, which you can hone with the help of this cybersecurity book.

This study guide takes a step-by-step approach to helping you cover all the exam objectives using plenty of examples and hands-on activities. You'll start by gaining insights into the different elements of InfoSec and a thorough understanding of ethical hacking terms and concepts. You'll then learn about various vectors, including network-based vectors, software-based vectors, mobile devices, wireless networks, and IoT devices. The book also explores attacks on emerging technologies such as the cloud, IoT, web apps, and servers and examines prominent tools and techniques used by hackers. Finally, you'll be ready to take mock tests, which will help you test your understanding of all the topics covered in the book.

By the end of this book, you'll have obtained the information necessary to take the 312-50 exam and become a CEH v11 certified ethical hacker.

What you will learn
Get to grips with information security and ethical hacking
Undertake footprinting and reconnaissance to gain primary information about a potential target
Perform vulnerability analysis as a means of gaining visibility of known security weaknesses
Become familiar with the tools and techniques used by an attacker to hack into a target system
Discover how network sniffing works and ways to keep your information secure
Explore the social engineering techniques attackers use to compromise systems
Who this book is for
This ethical hacking book is for security professionals, site admins, developers, auditors, security officers, analysts, security consultants, and network engineers. Basic networking knowledge (Network+) and at least two years of experience working within the InfoSec domain are expected.

Table of Contents
Understanding Ethical Hacking
Introduction to Reconnaissance
Reconnaissance – A Deeper Dive
Scanning Networks
Enumeration
Vulnerability Analysis
System Hacking
Social Engineering
Malware and Other Digital Attacks
Sniffing and Evading IDS, Firewalls, and Honeypots
Hacking Wireless Networks
Hacking Mobile Platforms
Hacking Web Servers and Web Apps
Hacking IoT and OT
Cloud Computing
Using Cryptography
CEH Exam Practice Questions

p.28 The Certified Ethical Hacker (CEH) certification exam is neither easy nor designed to be 
easy. If it was not hard, everyone would do it – its difficulty is what makes it great. Ethical 
hackers are the essential workers of the IT, cybersecurity, and software development 
world, and the CEH certification is one of their baseline requirements. This guide covers 
the basics of ethical hacking. It's useful to CEH exam candidates and people who are 
concerned about the vulnerabilities in their environments.
This comprehensive overview will help you to do the following:
• Cover the basics of the CEH certification.
• Gain a strong and practical understanding of ethical hacking.
• Know the requirements and the skills you need to become a CEH.
• Evaluate yourself against ethical hacking standards.
• Decide whether the CEH certification is right for you.
This chapter will meet these goals through the following topics:
• The benefits of the CEH certification
• Information security
• The Cyber Kill Chain
• The behavioral identification of attackers
• Information security controls
• Information security laws and standards

p.33 An ethical hacker thinks like an attacker or a criminal profiler. They know how to steal 
passwords and usernames, and how to find and exploit vulnerabilities and get away with 
it. Ethical hackers use the same tactics that the bad guys use. The only difference is that 
they have permission to do it. Also, ethical hackers bring more to the table. Here are some 
of the most important skills, ideal behaviors, and principles ethical hackers use:
• Expertise in architectures, programs, and networks – You need to know the ins 
and outs of how Transmission Control Protocol/Internet Protocol (TCP/IP) 
works. You need to understand networking structures and functions. You don't 
necessarily need to be an expert in all programs, but you do need to know how 
programs are installed, the modifications they make, and the possible security 
threats they pose. 
• Proficiency in vulnerability research – Ethical hackers need to keep up with the 
bad guys. So, find out as much as you can about new vulnerabilities. Additionally, 
ensure that you are good at the hacking techniques that attackers use because you 
might need to try them out on a particular target. 
• A good understanding of the hacking techniques attackers use – Ethical hackers 
are not vendor-specific; they understand the techniques attackers use across the 
board – the hacks that can be used against routers, Intrusion Detection Systems
(IDSes), and so on.
• Follow the code of conduct – Ethical hackers adhere to a strict code of conduct as 
required by the EC-Council.
• Disclose to the appropriate people – Ethical hackers owe it to their employers and 
clients to disclose what they ought to. They have a duty to disclose to authorities 
what they uncover if it is illegal. Ethical hackers also come across vulnerabilities in 
their clients' systems or infrastructures when evaluating them. The code bars them 
from exposing such information. They know what is off limits.
• They are good at the tactics and strategies attackers use – They know the tactics 
and the strategies. They don't just make stuff up or take shortcuts. 
• They understand no means no – If a client or employer gives specific guidelines of 
what's allowed and what's not, an ethical hacker will draw a line between the two 
and respect that decision. They will not try to cross it, and if there is a change of 
scope, they ensure it is done in writing.
• They never target a system or network they don't own or are not allowed into – 
It's not a skill per se, but if during the test a good ethical hacker is told to stop, they 
do so. Failure to do so has turned the lives of some ethical hackers upside down.
What is information security? 9
• They note and report results – They report all results, even if it might hurt 
someone whose good books they want to be in, such as the manager who 
recommended them for that penetration testing job. 
• They report their findings to legal authorities – They know they have a duty to 
report illegal activities or plans to the authorities and, as such, they ensure that the 
contract allows that. However, some jurisdictions place a legal responsibility on 
ethical hackers, even if the contract forbids such disclosures. Failure to report to 
legal authorities makes the ethical hacker an accessory to the crime. There are other 
ways out of such situations, including laws such as the Whistleblower Protection 
Act, which safeguards ethical hackers in specific types of disclosures.
• Confidentiality – When an ethical hacker encounters information that is deemed 
confidential, they know who to share their findings with, unless it goes against the 
laws of the land. 

p.34 For a proper foundation in information security, this section covers the following topics:
• Information security – a general overview
• The Confidentiality, Integrity, and Availability (CIA) triad
• Types of cyberattacks
• The hacking phases
• The types of hackers

p.36 Cyberattacks fall under different categories. These include the following:
• Passive attacks
• Active attacks
• Close-in attacks
• Insider attacks
• Distribution attacks
• Phishing attacks

p.46 We can summarize their goals by highlighting most of the objectives that attackers have:
• To disrupt an organization or the operations of a business
• To grab/steal information that is either important or private
What is information security? 21
• To take an act of revenge after losing out to an organization
• To create a financial issue
• To hurt the reputation of an organization

p.46-47 The Cyber Kill Chain (CKC) are steps that trace stages of an attack, right from 
reconnaissance through to exfiltration of data. There are several models for describing 
the general process of an attack on system security. This model was first developed by 
Lockheed Martin.
Phases of the CKC
Here are the phases of the CKC.
Reconnaissance
In the reconnaissance phase, attackers gather general knowledge about the system or 
network. It can be a passive or active attack.
Weaponization 
The attacker is going to couple the payload code – which is going to enable access 
remotely – with exploit code that will exploit the software and/or the security flaw.
Delivery 
Here, the attacker identifies a vector to transmit the weaponized code to the target 
environment. They can use a website, an email attachment, or a USB drive. 
Exploitation 
This step is the weaponization of the code. The malware gets triggered when the target 
clicks on the link in the malicious email or runs the code off of a USB drive they found 
lying in the parking lot.
Installation 
This mechanism, also known as the backdoor, enables the weaponized code (malware) to 
run a remote access tool for the intruder and to achieve persistence on the target system. 
Command and Control (CNC)
This is when the weaponized code gives the attacker access to the target's network or 
system. The weaponized code establishes an outbound channel to a remote server that can 
be used to control the remote access tool and possibly download more tools to expand 
the attack.
Actions and objectives 
In this phase, the intruder uses the access they've achieved to collect information from the 
target system and begins to transfer it through the remote system. The intention could be 
data exfiltration, encryption for ransom, data destruction, and so on. 

p.50 Let's look at some common IoCs:
• Unauthorized software or unauthorized files 
• Suspicious emails
• Suspicious registry or filesystem changes
• Unknown ports and protocol usage
• Excessive bandwidth usage – especially on the outbound side
• Rogue hardware devices
• Service disruption and defacement, maybe of a web page
• Suspicious or unauthorized account usage

p.52 To understand the layer protection strategy, we'll take a look at banks and how bank 
robbers look at them. So, how does a skilled bank robber look at the bank they are 
planning to rob? They plan the robbery following these steps:
1. First, they'll case the joint. In this step, they look at things such as the parking lot 
area to ensure successful entry and exit, marking where the doors are, how to access 
which section of the bank, and where the safe is.
2. The robber then looks at the bank's security measures, such as CCTV cameras, the 
security alarm, security guards, and so on.
3. Lastly, they go inside and interact with the bank staff. This presents them with the 
opportunity to familiarize themselves with the bank's processes and procedures.

p.54 Almost everybody that is involved with the credit card-processing process, including 
processors, merchants, issuers, and others, have to adhere to these standards in order to 
accept credit cards. These standards include the following: 
• Payment Card Industry Data Security Standard (PCI DSS) audits – to ensure 
they have built and are maintaining a secure network. They confirm you have your 
firewall configurations in place. 
• Protecting the cardholder data – to ensure that you're not using defaults for 
system passwords, and so on. It also includes protecting the cardholder data itself – 
meaning you need to encrypt it while it's in motion or in storage. 
• A Vulnerability Management Program (VMP) – this shows that you are able to 
maintain a VMP – that you use and regularly update your antivirus or anti-malware 
software solutions, as well as the programs involved in every system that is used in 
the credit card process. 
• Strong access controls – to ensure that we restrict access to cardholder information 
so that the business doesn't get everything; they only get what they need at any 
given time and it's on a need-to-know basis. This ensures that only the data that's 
needed is transmitted or received by that business. 
• Going through and assigning unique IDs to each person with computer access. 
• Restricting physical access to any of the cardholder information that the company 
is storing. 
• We also have to prove that we regularly monitor and test our networks, and of 
course, we're going to update those in time.
• Information security policy – you have to prove you have a policy in place and that 
you're going to maintain it and update it for anybody that's involved in the process 
of handling any type of credit card information. 

p.58 General Data Protection Regulation (GDPR) is at a global level and went into effect in 
2018. It's very stringent when it comes to privacy and security laws globally and carries 
some very hefty fines for anybody who violates it. While it is an EU-specific law, it has 
implications for services based all over the world that service geographies in the EU.
GDPR includes various protections and accountability principles:
• Lawfulness transparency and fairness: This means that the processing of data has 
to be lawful, transparent, and fair to the data subject. 
• The purpose limitation: This basically tells you, "You better have a reason for 
handling this type of data!".
• Storage limitation: Normally, this identifies that you can only store personal 
information for a specific period of time and for a specific purpose. 
• Data minimization: This ensures that we're only collecting and processing the 
information that's necessary for the particular purpose of getting that information. 
• Accuracy: This states that you have to keep personal data accurate and up to date. 
• Accountability: In this case here, the data controller is responsible for making sure 
that they adhere to GDPR compliance with all these different principles.
• Integrity and confidentiality: This means that when it comes to this data, 
we're typically going to make sure that it's encrypted with good encryption, not 
something that's outdated just because our app only works with this particular type 
of encryption. So yeah, you've got to keep up to date. 

p.66 Another type of recon is organizational or private recon. This entails going through and 
getting information from the organizational event calendar, email service, and more.

p.70 When you go through an organization's systems, ask yourself questions such as 
the following:
• Is SNMP being utilized?
• What system architecture are they using throughout their environment?
• What are their standard naming practices?
• Are they using all the latest and greatest by Microsoft?
• Do they have a little bit of Novell still out there?
• 32-bit or 64-bit?
• Are they supporting remote systems and not just VPNs? Are they using Microsoft's 
DirectAccess (pseudo-VPN solution)?
• What is the physical security of the building like?
• Do they have a kiosk machine in the hallway?
• Do they have users that travel around with laptops or tablets?
• How are passwords stored? 
• Are the employees on social media? 
• What kind of security policies have they deployed? Are the users trained?
• Do they support Bring Your Own Device (BYOD)? 

p.84 There are some other Google hacking tools that you can use to make things even easier:
• Google Hack Honeypot: This tool is designed to go out and provide reconnaissance 
against hackers or attackers that would use these search engine techniques on you. It 
creates a type of honeypot for you. In other words, it's a fake Google result. 
• SearchDiggity: This is a web GUI interface for Windows that provides a framework 
for using Google hacking tools. You can add additional components to it such as 
GoogleDiggity, BingDiggity, PortScanDiggity, and MalwareDiggity. 
• Metagoofil: This tool is quite powerful. It goes out and grabs metadata on any 
document that's publicly exposed, whether it's a DOCX, a PPTX, a DOC, or a PDF. 
Then, it downloads those files from the target and extracts the metadata so that you 
can see what's being exposed (especially usernames and passwords). 
• SiteDigger: SiteDigger searches Google's cache for any types of errors or 
misconfiguration issues present on your target organization's website.

p.85 WHOIS is a huge database that contains information regarding every website on the 
internet. It contains common information such as who owns the website, their email 
address, and some other information. A website called domaintools.com offers a nice 
WHOIS interface, but all the data comes from ICANN's service. 

p.135 So, how do you defend yourself against the kind of reconnaissance techniques we 
reviewed earlier?
The first thing you need to do is make sure you have configured your routers to not 
respond to certain types of traffic. In other words, ensure they don't identify themselves.
Here's a fun exercise. What's the default SSID (Service Set Identifier) on the Linksys
router? Oh, that's right, it's Linksys. What I like to do is take that Linksys router and 
change the SSID to D-Link – because that's the default broadcast for a D-Link router. 
That's misdirection. When an attacker comes, they're going to try to launch D-Link 
attacks at my router and not ones for Linksys. So, please, configure your routers to not 
give out information they shouldn't be.
Here are a few tips for protecting yourself:
• Make sure that you use some kind of IDS.
• When you deploy your web servers, don't leave them with the default 
configurations/settings. 
• Get rid of powered by… because it can give away too much information (you saw 
that earlier when we went through Google hacking techniques). 
• Enforce security policies. That includes training employees to adhere to the policies 
so they don't respond to someone calling them up and saying, "Hey, this is Billy Bob 
down at the IT department, I need to reset your password – can you tell me what it 
is currently?"
• Implement (and enforce) security policies on servers. Just having them and 
not enforcing them is like a parent threatening to ground a kid and not following 
through.
• Do some reconnaissance on yourself. 
• Close unused ports, and if you do have open ports, whitelist them.
• Disable unnecessary services on web servers. Microsoft has a Best Practice 
Analyzer (BPA) tool that will go through and tell you what services aren't needed 
that you have turned on based on the role of that server.
• Prevent search engines from caching. There's a file you can create called a robot.
txt file. This file tells Google which folders and files not to crawl or index. The only 
downside to this is that (you're going to laugh at this one) I can use Google to find 
websites that have robot.txt files in them.
• Disable directory listings in order to prevent people from learning the OS or doing 
directory traversal.
• Configure the internal and external DNS (separately):
 For example, if your public-facing site is gotham.com, make sure your internal 
DNS environment is not also gotham.com.
• Restrict input types (such as pipes, commas, and colons). This will be even clearer if 
you watch videos on SQL injection, as restricting your input types is what's going to 
save your bacon.
• Avoid cross-linking on your site (linking to other pages within your website). That 
just helps Google.
• Always remember – humans are the weakest link. In fact, my favorite quote is, 
"There is no patch for human stupidity." There was a report that the IRS started 
a big push to train all their employees on how to avoid social engineering attacks. 
Within 30 days, they pen tested them, and 65% of their employees gave up their 
information. Train your employees and help them set up encryption or stronger 
passwords. Send out updates through an organizational newsletter if you've got one. 
It pays off.

p.150 ICMP sweep/ping sweep 
This is the most common way to check for live systems. Like a sonar ping in a submarine, 
we ping and hope we get a return, which tells us how far away the target is or where the 
target is located. A standard ping uses the ICMP protocol, which is not only well known 
but also very noisy on the network – so much so that most IT professionals will block 
ICMP traffic as a deterrent.

p.173 A proxy chain is where an attacker is going to pwn several machines to route their traffic 
through. You might be able to discover the first proxy IP address they are attacking you 
with, but just when you think you have figured out who it is, you realize that it's been 
hopped through from another IP address so that you can get to the second proxy server. 
And you could keep backtracking to the third and maybe to the fourth.

p.179 This technique is usually conducted internally. While it can be done through 
reconnaissance, it is a slightly higher risk because we need an active connection to the 
target machine, which means what we're doing could be detected by a security team. 
When a user makes a connection to a network share, they must provide credentials. Those 
credentials are associated with what we refer to as an access control list (ACL). This ACL 
contains usernames and groups that have access and the permissions for those who access 
them. So, maybe we can trick the target machine into giving us that information without 
presenting our credentials

p.205 Vulnerabilities can be classified into the following categories: 
• Misconfiguration: You'll hear me preach about this all the time because it's one 
of the most common vulnerabilities. Misconfiguration is caused by human error. 
It allows attackers to gain unauthorized access to your systems. There are different 
types of misconfigurations because they could happen on application platforms, 
databases, the network itself, and even web servers. As misconfiguration could 
occur because someone may have forgotten to update the application or the 
database. They may have disabled the security settings or some features that are 
needed, or they may have gone set up permissions incorrectly or misconfigured 
SSL certificates. 
• Default installation vulnerabilities: These are typically done when we hit the 
Next options during installation. I get it. Sometimes, this happens. Installing an 
application where the attackers and everybody else are expecting it to be and using 
the same directory structure can create a vulnerability. 
• Buffer overflows: These are common software vulnerabilities, and they happen 
because of coding errors. What typically happens here is the attacker undermines 
the functionality of the program and tries to take control of the system by writing 
content beyond the allocated buffer size. If you overload the buffer, you end up 
creating a vulnerability, which could be anything from a system crash, the system 
becoming unstable, or even allowing some programs to do things they normally 
wouldn't do. 
• The server's operating system: Not patching the server's operating system (OS) 
appropriately may cause a vulnerability. Attackers are always looking or scanning 
for servers to see if they have them in a patch with the latest and greatest OS. 
Vulnerability classifications 181
• Design flaws: These are caused by either incorrect encryption or junky data 
validation processes; either the communication or the backend of an app or even 
a bad design flaw within the network infrastructure itself. 
• OS flaws: I know what you're thinking, and the answer is no, it's not just limited to 
Windows. Linux probably has more patches than Microsoft does. But it's because of 
these types of flaws that attackers can use Trojans, worms, and even viruses to attack 
those machines. So again, it comes back to patching. 
• Application flaws: Research your applications or any mainstream product 
regarding what flaws are associated with your applications. You also need to be 
notified of when those flaws take place, or when they've been discovered. So, update 
and keep your applications current. 
• Open services and ports: Often, we install stuff, and it opens ports or starts up 
services or features we may not use on that product or from that application. So, 
why have it open? Security professionals need to be on a constant lookout and scan 
the networks or systems for any unnecessary or insecure services or ports. 
• Default passwords: It cracks me up how many times people continue to use default 
passwords on devices, software, or the OS itself. The reason these are vulnerabilities 
is that if somebody just wants to get the application installed, they just hit next and 
take the defaults, and then in those defaults is the default password. They think, 
"Oh, I'll change it later" and then they forget, move on from the project, get fired, or 
someone else takes over. Whatever the case, these default passwords are going to be 
the bane of our existence. So, please do me a favor – make sure that you keep your 
passwords secret as you are installing the applications.
Now that we've identified potential areas for vulnerabilities to take place, let's look at what 
vulnerability assessments you should use.

p.212 Here are the steps of the vulnerability life cycle process:
• Creating a baseline: In this phase, we look at critical assets, identify them, and 
prioritize them to create a good baseline for vulnerability management. 
• The assessment: This is a critical phase of vulnerability management. What we 
do, as security professionals, is identify and know the vulnerabilities within our 
infrastructure. 
• Risk assessment: All we're doing here is measuring or summarizing the 
vulnerability and the risk level – some systems may be at a higher risk level than 
others. Again, it depends on what their function is and who is operating them. 
• Remediation: Remediation is the process of fixing those vulnerabilities based on 
the risk assessment. We need to know which ones are the most important and then 
tackle them accordingly.
• Verification: We take this step to make sure we've fixed the issue. It allows the 
security team to check whether all the phases we've done previously have been 
followed and if the identified vulnerabilities have been fixed.
• Monitoring: Regular monitoring needs to be performed to help you maintain and 
always have the lastest updates. This is because a new update will have you create 
a new baseline where new threats will come out daily. So, we're going to continue 
monitoring. 

p.305 Here are some reasons an insider attack is so effective:
• Insider attacks can go undiscovered for years and resolving them is costly.
• Insider assaults are simple to carry out.
• Insider attacks are difficult to prevent and can easily succeed.
• It's tough to tell the difference between damaging behavior and an employee's usual 
duties. It's difficult to tell whether an employee is acting maliciously.
• Even if harmful conduct has been uncovered, the employee may refuse to accept 
responsibility, claiming it was an error.
• Employees might easily cover their tracks by altering or deleting logs to conceal 
harmful behavior.

p.336 The Trojan horse gets its background from Greek mythology about the Trojan War, 
where the Greeks attacked the city of Troy. At the end of the war, the Greeks came up 
with a final plan of attack—they would build a giant hollow wooden horse (and for some 
strange reason, they were sacred to Trojans), and the hollow horse would be filled with 
soldiers. The Trojans brought the horse into the city and when they went to bed, the 
soldiers came out, including Brad Pitt, all glistening, and they ransacked the city. That's 
basically the same concept here. We're going to have a legitimate program, but our Trojan 
will contain some type of spyware, keylogger, a rootkit, or some other type of program 
we can use to get back in. We're going to have the victim bring the software onto their 
computer. Once executed, the Trojan can relay information or steal the data outright. 
As far as the life cycle is concerned, the following steps occur:
1. We start off by creating the payload. This is the program we are going to 
design to do some specific things—for example, finding credit card numbers 
or personal information. 
2. After creating this payload, we take our legitimate programs, such as Office, the 
latest version of Windows, an mp3, a movie, or an antivirus. 
3. We inject the payload inside the legitimate program and put it out there via torrents, 
websites, or even a USB drop—dropping a USB thumb drive somewhere in the 
parking lot of a company or in the hallway of a company and waiting to see who 
plugs it in—or Internet Relay Chat (IRC) channels. This transmission method 
relies heavily on a social engineering concept, which is I want something for 
nothing—for example, if Microsoft just released the latest version of Office and you 
see it up on a torrent site, download, and install it. Why did somebody put that up 
on a torrent site? 
4. After downloading it, you simply install the program. As you install the application, 
the Trojan gets the same permission as the user that's currently logged in. It can 
then start modifying itself. There are Trojans that morph themselves to make it 
harder to detect them. They transmit themselves and start infecting other nodes 
inside of your environment.

TYPES OF TROJAN
Notification Trojans
Botnet Trojans
Proxy-server Trojans
FTP-server Trojans

COMMON TROJANS
VNC Trojan
HTTP and HTTPS Trojans
Command-shell Trojans
Document Trojans
Remote-access Trojans
Backdoor Trojan

p.358 Signs of infection 
When a virus shows up, you need to know what some of the signs are. Here are 
some pointers:
• Drive issues—You might have a hard drive issue, or your hard drive may be 
flashing, even though nothing is running on the drive at the time and the system 
is not under a load. 
• Video issues—You might experience video issues, either not seeing what 
you'd expect to see or even, possibly, the display looking strange. 
• Full memory—Another symptom is the memory filling up completely so that the 
system slows way down in some cases, creating vulnerabilities or exploits. 
• Applications running slowly—Applications running slowly when launched. 
• Strange filenames—Filenames could turn strange. So, if you start seeing strange 
characters show up in the filename, you might be infected. 
• System freezes or locks up—The system could also freeze or lock up. 

p.369 Some of the most common 
types of DoS attacks include the following:
• Flooding attacks—In a flooding attack, the attacker sends a large number of 
requests to the organization's servers, overwhelming them and preventing 
legitimate users from accessing the resources they need.
• SYN floods—A synchronize (SYN) flood occurs when the attacker sends a large 
number of SYN packets to the organization's servers. Because the request is not 
complete, the servers are unable to send a SYN-ACK message, where ACK stands 
for acknowledgment. The servers become overwhelmed and legitimate users 
cannot access them.
• Application layer assaults—These attacks focus on specific applications 
or services that an organization uses. For example, there may be an attack against 
an organization's email server that prevents messages from being sent or received.

p.370 DDoS attacks, which are a type of DoS attack, are becoming increasingly common. 
A DDoS attack is when multiple systems are used to send overwhelming amounts of 
traffic to a target system, preventing it from functioning normally. Some of the most 
common types of DDoS attacks include the following:
• UDP floods—In a UDP flood attack, the attacker sends a large number of UDP 
packets to the target system. Because UDP is an unreliable protocol, there is no 
mechanism for the server to determine whether a request was sent. The target 
system becomes overwhelmed by UDP requests and cannot respond to 
legitimate users.
DoS threats 345
• Internet Control Message Protocol (ICMP) floods—In this type of attack, the 
attacker sends a large number of ICMP packets to the target. These packets spoof 
the source IP address so that it appears to be coming from the target system. 
As a result, the target system is overwhelmed with requests and cannot respond 
to legitimate users.
• HTTP floods—In an HTTP flood attack, the attacker sends a large number of 
HTTP requests to the target system. Because HTTP is a stateless protocol, there 
is no way for the server to determine whether a request has been sent before. The 
target system becomes overwhelmed and cannot respond to legitimate users.

p.371 There are several different mitigation strategies you can use to protect yourself from 
a DDoS attack. Some of these are listed here:
• Use a DDoS protection provider—A DDoS protection provider will monitor 
incoming traffic toward your server and filter out any malicious requests. This helps 
you to reduce the effects of an attack but does not prevent it entirely.
• Implement network segmentation—Segmenting your network will allow you to 
isolate each server so that attackers cannot target multiple systems at once. To limit 
the impact of an attack, try implementing micro-segmentation through software 
such as Virtual Routers (vRouters). This will allow you to separate your systems 
and protect yourself from a mass attack.
• Implement application-layer protections—The application layer is one of the most 
vulnerable parts of an architecture, but it can also be one of the easiest to protect 
against DDoS attacks. Software such as vArmour protects the application layer by 
providing an additional security layer for your servers.
• Use DDoS detection tools—There are many different network-based methods that 
can be used to detect a potential attack. These include mitigating DNS floods with 
Berkeley Internet Name Domain (BIND); Cisco IOS global rate limiting; and 
router access control lists (ACLs), blackhole routing, null routing, and source-based 
routing. You should also monitor your system logs for any signs of an attack.

p.383 There are two types of wiretaps out there, as outlined here:
• Active wiretapping allows an attacker to manipulate and force themselves into 
the middle using a Man-in-the-Middle (MITM) attack, which allows the attacker 
to record and monitor traffic. As an active channel, it can allow the attacker to 
change the data flowing through or inject information. When it comes to ethical 
hacking, active means we're going to do something extremely aggressive by forcing 
a communication. You can see a depiction of a MITM attack in the following 
diagram:
What is sniffing? 359
Figure 10.1 – MITM attack
• Passive wiretapping allows an attacker to eavesdrop or listen into conversations—
nothing malicious; it's only for gathering information. We can use passive tapping 
to record that same information, but we're not manipulating anything or anyone. 

p.426 Frequency hopping spread spectrum (FHSS) was invented by Hedy Lamarr. She was not 
only a famous Silver Screen actress but also very intelligent. In fact, she was an inventor. 
It's kind of funny to watch the documentary about her. She was so beautiful that a lot of 
men—you must think of the time when she was around—didn't take her seriously as far 
as some of her inventions were concerned. 
FHSS was accomplished by manipulating radio frequencies at irregular intervals between 
transmissions and receptions, hence hopping. 
Her invention also formed an unbreakable code because it was hopping around so nobody 
could listen in, meaning that classified messages could be transmitted without being 
intercepted. Typically, FHSS operates within the 900 MHz to 2.4 GHz range. 
A variation of FHSS is called adaptive frequency hopping (AFH), which is also known as 
Bluetooth. 
With any type of spread spectrum technology, if you have a lot of devices communicating 
on the exact same channel, that equals degradation of signal. So, what Hedy Lamarr did 
is create this technology that allows the channel or the transmission to jump between the 
different channels. You do this with a hop sequence.

p.430 Types of Wi-Fi? Isn't it just all wireless? No, not really. Matter of fact, here's where we're 
going to play around with some terms because, today, we use terms such as APs. These are 
the different types of Wi-Fi:
• Extension to networks: The first type of Wi-Fi is the extension to networks. What 
this means initially is APs, which I have emphasized because whenever we say APs, 
we have this tendency to think of the little Cisco or Linksys, or the D-Link product, 
for example. We envision these devices as not only APs but also switches and 
routers. But you can purchase an AP designed to be a bridge to wireless folks, so 
they gain access to the wired network. 
• LAN networks: Another type is to have extension networks designed to 
communicate with each other. We refer to these as LAN-to-LAN networks and 
often see this being done between buildings. 
• Multiple access point network: This is where we have multiple APs representing 
the same BSSID. So, no matter where you go within the building or the 
environment, your traffic is directed back to the same network. To appropriately 
deploy these, you need to make sure the APs overlap each other as far as coverage 
is concerned. This makes it so the user can move around or roam between the two 
connections, never losing connectivity. 
• Cellular access networks: This is where we use cellular service to provide access to 
the internet. Our phones become cellular hotspots and turn into full APs for us so 
when we're at the airport or out and about, we can turn on the hotspot access on 
our phone and connect a laptop, tablet, or another type of device to it. 

p.431 Different Wi-Fi technologies
It all started with the 802.11 family, as explained here:
• 802.11 (Wi-Fi): This standard applies to WLANs and uses FHSS or DSSS as the 
frequency-hopping spectrum. It was developed to operate on the 2.4 GHz ISM band 
and supported speeds of 1 Mbps – 2 Mbps. Compared to the speeds we have now, 
it would take longer to download files and cause challenges with group video calls, 
online gaming, and streaming.
• 802.11a: This was the first standard to use the 5 GHz range, which allowed faster 
speeds (up to 54 Mbps) but was really limited by its range. It also was the first time 
we saw OFDM being used. We mostly saw these used in the business world as the 
devices weren't cheap. 
• 802.11b: This used only DSSS on the 2.4 GHz band and could achieve speeds of 
11 Mbps. It was better at penetrating obstacles for a wider coverage area, but its 
downside was interference caused by other devices such as microwaves, cordless 
phones, and Bluetooth devices.
• 802.11g: The developers took the best qualities of 802.11a and 802.11b to create the 
802.11g standard. It supports a networking bandwidth up to 54 Mbps and operates 
under the 2.4 GHz band. The devices using this standard are only capable of tapping 
into the standard under which they operate, which means an 802.11b computer 
connected to an 802.11g AP can only go as fast as what the b standard allows. On 
the flip side, a g device connected to a b AP will only go as fast as what the AP offers.
• 802.11n: Wireless-N was developed in 2009 to improve speed and reliability, and 
extend the range of wireless transmissions. It was the first standard to use multipleinput, multiple-output (MIMO) technology. MIMO products use a series of 
antennas to receive more data from one device at a time, which results in faster 
data transmissions. In addition, it was the first to allow the usage of two radio 
frequencies – 2.4 GHz and 5 GHz. The use of both frequencies makes the 802.11n 
standard compatible with 802.11a/b/g devices. With all its improved functionalities, 
802.11n supported bandwidth speeds up to 600 Mbps and had a theoretical range of 
230 ft indoors, which is a huge upgrade from the previous standards.
• 802.11ac: The fifth generation of Wi-Fi was developed to reduce interference in the 
2.4 GHz band; it was developed to operate under the 5 GHz band. Most of these 
devices are advertised as dual-band – but the real deal is that vendors incorporated 
Wireless-N technology to make ac products compatible with the 2.4 GHz band. 
It was also the first to use downlink multi-user MIMO (DL MU-MIMO). It took 
Wireless-N MIMO technology one step further to increase data transmission even 
more. DL MU-MIMO allows wireless routers to transmit information to multiple 
devices at the same time, improving bandwidth speeds and reducing latency. With 
the help of Wireless-N technology, 802.11ac is compatible with 802.11a/b/g/n.
• 802.11ax (Wi-Fi 6): The new kid on the block. It's designed to deliver faster speeds, 
support more devices simultaneously, decrease latency, improve security, and 
increase bandwidth. To do so, it includes technologies such as OFDM, MU-MIMO, 
and 1024-QAM. With all of its improvements, it has a theoretical maximum speed 
of 14 Gbps. In addition, it operates on the 2.4 and 5 GHz bands, which hasn't 
been done since 802.11n. This allows it to be compatible with 802.11a/b/g/n/ac. 
In 2021, Wi-Fi 6 will have a subcategory known as Wi-Fi 6E (Wi-Fi 6 Extended). 
The FCC has made the 6 GHz frequency available, thanks to Facebook and Google 
championing the release of another frequency to be opened for public use. Wi-Fi 
6E devices will be able to operate on the 2.4, 5, and 6 GHz frequencies. As a result, 
compatible Wi-Fi devices will benefit from less congested frequency bands.

p.433 Here are some different ways we can identify Wi-Fi networks. To discover them, we can 
use one of the following methods:
• Warwalking: This is where we have a mobile device with us and we simply walk 
around a building, and it picks up APs and records information for us. 
• Warflying: This is a relatively new concept and, with drones, it'll get even more 
popular. However, back in my day, they used model rockets, like the ones kids shoot 
and watch go up in the air. Well, some kids attached a WAP to one of them and shot 
it up. They picked up like a 15-mile range of WAPs as it went up and came back 
down. 
• Wardriving: Wardriving, as the name suggests, is searching for wireless networks
while in a moving vehicle.
So, after we've identified those networks, we want to make sure we can share this 
information. This is where warchalking came into play. Again, this may be a little bit of 
a deprecated technology or concept because of what we've done in the digital age; most of 
the stuff now is online. But it got its start back in 2002 by a gentleman by the name of Matt 
Jones, and it was inspired by the Great Depression and the homeless community. 

p.444 Let's look at some of the integrity attacks you could be a victim of. They can be summed 
up in several different categories: 
• Data frame injection – This is where we construct and send out forged wireless 
frames on the network. 
• WEP injection – If you've been around wireless at all, you probably understand 
what this is. Basically, we construct and distribute forged WEP encryption keys. 
• Bit flipping attack – This is where the attacker sniffs a frame on the wireless 
network. The attacker transmits the modified frame, and the AP accepts the 
modified frame, but when the destination receiver goes to decapsulate the frame, 
the checksum fails, and the receiver generates a predictable Internet Control 
Message Protocol (ICMP) error. The attacker simply sniffs the network LAN 
looking for the encryption error and, upon receiving the message of the error, 
the attacker can derive the keystream, which is the same thing we do with the IV 
replay attack. 
• Data replay – This is where we simply capture the data frames and replay the 
frames later.
• RADIUS replay – This is where we capture the communication channel between 
the AP and the authentication server. Remember we talked about RADIUS servers? 
We can later replay that interaction to see if we can gain access. 
• Wireless network viruses – Believe it or not, these are wireless network viruses. 
These aren't viruses that target computers and nodes; they target APs. One of the 
most popular ones is called Chameleon. When it attacks an AP, it doesn't affect how 
it works. Instead, it is able to collect and report the credentials of all other Wi-Fi 
users who are connected to it, and it can spread to other APs outside your wireless 
infrastructure. So yeah, your neighbor's AP could infect your AP. 

p.505 Web application security testing is done to assess the performance and security of the apps 
you have in place. These types of tests should be scheduled regularly to ensure the app can 
handle a variety of different attacks.
Here are some tips on how to get started with your web application security testing:
• Identify what you hope to learn by conducting the tests.
• Identify which performance and security issues are the most important for 
your project.
• Create an attack plan before you start the testing process.
• Perform the tests you have planned out.
• Review the results of your testing and develop a plan for fixing any performance or 
security issues.
• Perform source code reviews.
• Evaluate the encoding schemes.
For more details on this topic, check out OWASP's Testing Guide at https://owasp.
org/www-project-web-security-testing-guide.

p.537 ICS/SCADA has vulnerabilities regarding being attacked. Here are some of the potential 
attacks that may be used against ICS/SCADA:
• HMI-based attacks: HMI-based attacks target human-machine interfaces, which 
are used to view and manipulate data on ICS/SCADA systems. These types of 
attacks can be launched by gaining unauthorized access to the network or tricking 
operators into visiting spoofed websites that launch malware onto their computers. 
• Memory corruption: A memory corruption attack is a hack that aims to corrupt 
the memory of an ICS/SCADA component so that it fails to perform as expected. 
These types of attacks can be launched by gaining unauthorized access to the 
network or intercepting communication between components to tamper with them. 
• Credential management: These aim to gain access to an ICS/SCADA environment 
by using default passwords. This would also include the lack of encryption as data is 
in motion, which would reveal cleartext passwords and account names.
• Code injection: These types of attacks inject malicious code into ICS/SCADA 
software to cause technical issues, disrupt operations, or allow attackers to access 
the system. The vulnerabilities in this category include common code injections 
such as SQL, operating system, command, and some domain-specific injections. 
Gamma script, like many other domain-specific languages for HMIs, is vulnerable 
to code injection attacks

p.538 Here is a list of some options to consider when you're trying to defend against OT 
hacking:
• To lower current risk exposure, conduct a risk assessment regularly.
• Use purpose-built sensors to discover the vulnerabilities in the network inactively.
• By combining threat intelligence with asset protection, you can detect threats and 
prioritize OT patches.
• Make sure your OT devices and software are always up to date.
• Unused ports and services should be disabled.
• For OT applications, use best security practices and secure coding.
• Continuously monitoring and detecting log data that's been generated by OT 
systems is required to discover real-time assaults.
• Raise security awareness among staff and provide them with up-to-date security 
measures.
• Use hashing to create strong and secure passwords and change the factory-preset 
passwords.
• Use two-factor authentication, VPNs, encryption, firewalls, and more to provide 
secure remote access through a variety of barriers.

p.543 Cloud services are delivered using internet technologies, which can include public, 
private, or hybrid models. Let's look at these briefly next:
• Public cloud services: These are offered by providers such as Amazon, Google, and 
Microsoft. These services are available to the public and can be used by anyone who 
registers for an account. The provider manages the infrastructure and applications 
and makes them available on a pay-as-you-go basis.
• Private cloud services: These are offered by organizations such as IBM, HewlettPackard, and Rackspace. These services are used by the organization that owns them 
and are not available to the public. The provider manages the infrastructure and 
applications and makes them available on a pay-as-you-go basis.
• Hybrid cloud services: This is a combination of public and private cloud services. 
For example, an organization might use a public cloud service for email and a 
private cloud service for storage.
• Multi-cloud services: Multi-cloud is another one. It's a cloud environment made up 
of two or more clouds (private, public, or community) that remain unique entities 
and yet are linked to provide the benefits of various deployment methods. The 
company in this scenario makes some assets internally available and manages them, 
while other resources are external and handled by others. A great example of this is 
Microsoft's Azure or Zymr.

p.548 Now that we have a basic understanding of cloud storage, let's look at some of the most 
popular cloud storage services.
• Amazon S3 is a cloud storage service that allows you to store data in the cloud. The 
service is based on the Amazon Web Services (AWS) platform. 
• Azure Blob Storage is a cloud storage service that allows you to store data in the 
cloud. The service is based on the Azure platform. 
• Google Cloud Storage is a cloud storage service that allows you to store data in the 
cloud. The service is based on the Google Cloud Platform (GCP). 
• IBM Cloud Object Storage is a cloud storage service that allows you to store data 
in the cloud. The service is based on the IBM Cloud platform.
Let's explore the National Institute of Standards and Technology (NIST) cloud 
deployment reference architecture next

p.559 Some of the standard compliance requirements that apply to cloud-based systems include: 
• The Health Insurance Portability and Accountability Act (HIPAA)
• The Sarbanes-Oxley Act (SOX)
• The Payment Card Industry Data Security Standard (PCI DSS)
• The Gramm-Leach-Bliley Act (GLBA)